[{"path":"https://bdshaff.github.io/tidymmm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 tidymmm authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bdshaff.github.io/tidymmm/articles/Adstock-Weights-and-Transformations.html","id":"geometric-adstock-weights","dir":"Articles","previous_headings":"","what":"Geometric Adstock Weights","title":"Adstock-Weights-and-Transformations","text":"function geometric adstock weights following form: \\[ w(\\theta,l) = \\theta^l \\] \\[ l \\[0,L-1], 0<\\theta<1 \\] see Bayesian Methods Media Mix Modeling Carryover Shape Effects","code":""},{"path":"https://bdshaff.github.io/tidymmm/articles/Adstock-Weights-and-Transformations.html","id":"normalized","dir":"Articles","previous_headings":"Geometric Adstock Weights","what":"Normalized","title":"Adstock-Weights-and-Transformations","text":"normalize set TRUE default sum weights 1. length result equal max_carryover - function parameter Setting normalize = FALSE return unscaled weights","code":"a <- geometric_adstock_weights(decay = 0.1, max_carryover = 5) b <- geometric_adstock_weights(decay = 0.9, max_carryover = 8) sum(a) #> [1] 1 sum(b) #> [1] 1 length(a) #> [1] 5 length(b) #> [1] 8 a <- geometric_adstock_weights(decay = 0.2, normalize = FALSE) b <- geometric_adstock_weights(decay = 0.2) sum(a) #] not normalized #> [1] 1.25 sum(b) #] normalized #> [1] 1"},{"path":"https://bdshaff.github.io/tidymmm/articles/Adstock-Weights-and-Transformations.html","id":"changing-the-decay-rate","dir":"Articles","previous_headings":"Geometric Adstock Weights","what":"Changing the Decay Rate","title":"Adstock-Weights-and-Transformations","text":"Keeping max_carryover = 5 constant varying decay rate shows small decay rate leads small amount ad exposure volume carried future large decay rate carry exposure volume. choice rate depend medium/channel/tactic/independent variable included, well dependent variable. example sales durable goods like cars washing machines may require larger carry ad exposure variables subscriptions streaming service. Likewise OOH Brand advertising may require larger decay rate digital re-targeting tactics.  option normalizing weights however lead ad exposure inflation applying adstock transformation data. may make sense contextual known ad exposure given channel unreported - however best handled data preparation rather modeling default behavior normalize weights.","code":""},{"path":"https://bdshaff.github.io/tidymmm/articles/Adstock-Weights-and-Transformations.html","id":"changing-maximum-carryover","dir":"Articles","previous_headings":"Geometric Adstock Weights","what":"Changing Maximum Carryover","title":"Adstock-Weights-and-Transformations","text":"seen effect changing decay rate can now explore effects smaller larger max_carryover parameter. ’ll keep decay rate = 0.6. can see plots maximum carryover set 1 carryover take place. decay rate normalized weight one. increase maximum carryover visible effect around ~7 tail end weights becomes small thus small effect.","code":""},{"path":"https://bdshaff.github.io/tidymmm/articles/Adstock-Weights-and-Transformations.html","id":"adstock-transformations","dir":"Articles","previous_headings":"","what":"Adstock Transformations","title":"Adstock-Weights-and-Transformations","text":"Let’s now apply weight sample data:","code":""},{"path":"https://bdshaff.github.io/tidymmm/articles/Adstock-Weights-and-Transformations.html","id":"changing-decay-rate","dir":"Articles","previous_headings":"Adstock Transformations","what":"Changing Decay Rate","title":"Adstock-Weights-and-Transformations","text":"applying geometric adstock data can see higher decay rate smoothing effect wherein peaks troughs original data dampened lifted. larger decay rate stronger smoothing.","code":""},{"path":"https://bdshaff.github.io/tidymmm/articles/Adstock-Weights-and-Transformations.html","id":"changing-maximum-carryover-1","dir":"Articles","previous_headings":"Adstock Transformations","what":"Changing Maximum Carryover","title":"Adstock-Weights-and-Transformations","text":"saw weights - maximum carryover parameter really parameter unlocks decay rate allows come full effect. result see keep dacay rate constant 0.6 transformation kicks max carryover > 1. impact changing maximum carryover diminishes virtually effect 8-12.","code":""},{"path":"https://bdshaff.github.io/tidymmm/articles/MMM-With-Carryover-And-Saturation.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"MMM-With-Carryover-And-Saturation","text":"","code":"library(recipes) library(workflows) library(parsnip) library(tibble) library(broom.mixed) library(ggsci) library(rstanarm)  library(tidymmm) data(mmm_imps) data(mmm_spend)"},{"path":"https://bdshaff.github.io/tidymmm/articles/MMM-With-Carryover-And-Saturation.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MMM-With-Carryover-And-Saturation","text":"Impressions Data Spend Data","code":"glimpse(mmm_imps) #> Rows: 200 #> Columns: 5 #> $ Date       <date> 2018-01-07, 2018-01-14, 2018-01-21, 2018-01-28, 2018-02-04… #> $ mi_tv      <dbl> 344275.4, 0.0, 0.0, 0.0, 0.0, 204905.0, 0.0, 243839.5, 0.0,… #> $ mi_radio   <dbl> 0.00, 17206.08, 21155.95, 13623.15, 0.00, 19578.15, 0.00, 1… #> $ mi_banners <dbl> 0.000, 3731.596, 2217.981, 0.000, 4274.270, 2801.566, 3329.… #> $ kpi_sales  <dbl> 9779.80, 13245.19, 12022.66, 8846.95, 9797.07, 13527.65, 96… glimpse(mmm_spend) #> Rows: 200 #> Columns: 5 #> $ Date       <date> 2018-01-07, 2018-01-14, 2018-01-21, 2018-01-28, 2018-02-04… #> $ mi_tv      <dbl> 13528.10, 0.00, 0.00, 0.00, 0.00, 8045.44, 0.00, 9697.29, 0… #> $ mi_radio   <dbl> 0.00, 5349.65, 4235.86, 3562.21, 0.00, 4310.55, 0.00, 4478.… #> $ mi_banners <dbl> 0.00, 2218.93, 2046.96, 0.00, 2187.29, 1992.98, 2253.02, 20… #> $ kpi_sales  <dbl> 9779.80, 13245.19, 12022.66, 8846.95, 9797.07, 13527.65, 96…"},{"path":"https://bdshaff.github.io/tidymmm/articles/MMM-With-Carryover-And-Saturation.html","id":"model-recipes","dir":"Articles","previous_headings":"","what":"Model Recipes","title":"MMM-With-Carryover-And-Saturation","text":"Recipe without transformation Recipe transformations default hyperparameters Recipe tuned carryover saturation transformations","code":"ln_init_mmm <-   recipe(kpi_sales ~ ., data = mmm_imps) |>   add_role(c(mi_tv, mi_radio, mi_banners), new_role = \"mi\") |>   update_role(Date, new_role = \"temp\") |>   update_role_requirements(\"temp\", bake = FALSE) cs_init_mmm <-   recipe(kpi_sales ~ ., data = mmm_imps) |>   add_role(c(mi_tv, mi_radio, mi_banners), new_role = \"mi\") |>   update_role(Date, new_role = \"temp\") |>   update_role_requirements(\"temp\", bake = FALSE) |>   step_geometric_adstock(mi_banners) |>   step_geometric_adstock(mi_tv) |>   step_geometric_adstock(mi_radio) |>   step_hill_saturation(mi_banners, max_ref = TRUE) |>   step_hill_saturation(mi_tv, max_ref = TRUE) |>   step_hill_saturation(mi_radio, max_ref = TRUE) cs_tuned_mmm <-   recipe(kpi_sales ~ ., data = mmm_imps) |>   add_role(c(mi_tv, mi_radio, mi_banners), new_role = \"mi\") |>   update_role(Date, new_role = \"temp\") |>   update_role_requirements(\"temp\", bake = FALSE) |>   step_geometric_adstock(mi_banners, decay = 0.432, max_carryover = 1) |>    step_hill_saturation(mi_banners, shape = 1.30, max_ref = TRUE) |>    step_geometric_adstock(mi_tv, decay = 0.0181, max_carryover = 8) |>    step_hill_saturation(mi_tv, shape = 0.783, max_ref = TRUE) |>    step_geometric_adstock(mi_radio, decay = 0.193, max_carryover = 1) |>    step_hill_saturation(mi_radio, shape = 1.06, max_ref = TRUE)"},{"path":"https://bdshaff.github.io/tidymmm/articles/MMM-With-Carryover-And-Saturation.html","id":"setup-workflows","dir":"Articles","previous_headings":"","what":"Setup Workflows","title":"MMM-With-Carryover-And-Saturation","text":"Using linear regression Bayesian estimation engine.","code":"lm_mod <- linear_reg() |> set_engine(\"stan\")  ln_init_wflow <-   workflow() |>   add_model(lm_mod) |>   add_recipe(ln_init_mmm)  cs_init_wflow <-   workflow() |>   add_model(lm_mod) |>   add_recipe(cs_init_mmm)  cs_tuned_wflow <-   workflow() |>   add_model(lm_mod) |>   add_recipe(cs_tuned_mmm)"},{"path":"https://bdshaff.github.io/tidymmm/articles/MMM-With-Carryover-And-Saturation.html","id":"fitting-models-running-workflows","dir":"Articles","previous_headings":"","what":"Fitting Models / Running Workflows","title":"MMM-With-Carryover-And-Saturation","text":"","code":"ln_init_fit <- ln_init_wflow |> fit(data = mmm_imps) cs_init_fit <- cs_init_wflow |> fit(data = mmm_imps) cs_tuned_fit <- cs_tuned_wflow |> fit(data = mmm_imps)"},{"path":"https://bdshaff.github.io/tidymmm/articles/MMM-With-Carryover-And-Saturation.html","id":"use-tidy-to-extract-fitted-parameters","dir":"Articles","previous_headings":"Fitting Models / Running Workflows","what":"Use tidy to extract fitted parameters","title":"MMM-With-Carryover-And-Saturation","text":"","code":"tidy(ln_init_fit, conf.int = TRUE) #> # A tibble: 4 × 5 #>   term         estimate  std.error  conf.low conf.high #>   <chr>           <dbl>      <dbl>     <dbl>     <dbl> #> 1 (Intercept) 6997.     219.       6630.     7351.     #> 2 mi_tv          0.0138   0.000806    0.0124    0.0151 #> 3 mi_radio       0.131    0.0104      0.113     0.149  #> 4 mi_banners     0.661    0.0671      0.549     0.770 tidy(cs_init_fit, conf.int = TRUE) #> # A tibble: 4 × 5 #>   term         estimate std.error  conf.low conf.high #>   <chr>           <dbl>     <dbl>     <dbl>     <dbl> #> 1 (Intercept) 1775.     402.      1080.     2444.     #> 2 mi_tv          0.0280   0.00120    0.0261    0.0300 #> 3 mi_radio       0.251    0.0224     0.215     0.288  #> 4 mi_banners     1.91     0.174      1.63      2.20 tidy(cs_tuned_fit, conf.int = TRUE) #> # A tibble: 4 × 5 #>   term         estimate  std.error  conf.low conf.high #>   <chr>           <dbl>      <dbl>     <dbl>     <dbl> #> 1 (Intercept) 6567.     202.       6247.     6888.     #> 2 mi_tv          0.0162   0.000739    0.0149    0.0174 #> 3 mi_radio       0.116    0.00807     0.103     0.130  #> 4 mi_banners     0.851    0.0735      0.732     0.973"},{"path":"https://bdshaff.github.io/tidymmm/articles/MMM-With-Carryover-And-Saturation.html","id":"post-modeling","dir":"Articles","previous_headings":"","what":"Post-Modeling","title":"MMM-With-Carryover-And-Saturation","text":"Named List trained models","code":"models <- list(   ln_init_fit = ln_init_fit,   cs_init_fit = cs_init_fit,   cs_tuned_fit = cs_tuned_fit   )"},{"path":"https://bdshaff.github.io/tidymmm/articles/MMM-With-Carryover-And-Saturation.html","id":"model-decomposition","dir":"Articles","previous_headings":"Post-Modeling","what":"Model Decomposition","title":"MMM-With-Carryover-And-Saturation","text":"","code":"model_decomps <- decompose(models, new_data = mmm_imps, spend_data = mmm_spend) model_decomps #> # A tibble: 3 × 5 #>   model        workflow   decomp             roi              pred               #>   <chr>        <list>     <list>             <list>           <list>             #> 1 ln_init_fit  <workflow> <tibble [800 × 9]> <tibble [4 × 4]> <tibble [200 × 1]> #> 2 cs_init_fit  <workflow> <tibble [800 × 9]> <tibble [4 × 4]> <tibble [200 × 1]> #> 3 cs_tuned_fit <workflow> <tibble [800 × 9]> <tibble [4 × 4]> <tibble [200 × 1]>"},{"path":"https://bdshaff.github.io/tidymmm/articles/MMM-With-Carryover-And-Saturation.html","id":"model-metrics-fit","dir":"Articles","previous_headings":"Post-Modeling","what":"Model Metrics & Fit","title":"MMM-With-Carryover-And-Saturation","text":"","code":"model_metrics(model_decomps, new_data = mmm_imps) #> # A tibble: 3 × 4 #>   model        workflow     rsq  mape #>   <chr>        <list>     <dbl> <dbl> #> 1 cs_tuned_fit <workflow> 0.819  9.43 #> 2 cs_init_fit  <workflow> 0.814  9.90 #> 3 ln_init_fit  <workflow> 0.752 11.2 plot_model_fit(model_decomps)"},{"path":"https://bdshaff.github.io/tidymmm/articles/MMM-With-Carryover-And-Saturation.html","id":"contributions","dir":"Articles","previous_headings":"Post-Modeling","what":"Contributions","title":"MMM-With-Carryover-And-Saturation","text":"Contribution percent breakdown    Channel contrbution volume ROIs Plot ROIs","code":"plot_base_contribution(model_decomps) plot_channel_contribution(model_decomps) model_decomps |>    filter(model == \"cs_tuned_fit\") |>    plot_channel_contribution_month(     begin_date = \"2021-04-01\",      end_date = \"2022-01-01\"     ) channel_metrics(model_decomps) #> # A tibble: 4 × 7 #>   term    sales_ln_init_fit sales_cs_init_fit sales_cs_tuned_fit ROI_ln_init_fit #>   <chr>               <dbl>             <dbl>              <dbl>           <dbl> #> 1 base             1398256.           355774.           1312275.          NA     #> 2 mi_tv             208246.           593524.            264534.           0.353 #> 3 mi_rad…           210363.           448628.            217429.           0.475 #> 4 mi_ban…           317275.           735921.            338595.           1.04  #> # ℹ 2 more variables: ROI_cs_init_fit <dbl>, ROI_cs_tuned_fit <dbl> plot_roi(model_decomps)"},{"path":"https://bdshaff.github.io/tidymmm/articles/MMM-With-Carryover-And-Saturation.html","id":"response-curves","dir":"Articles","previous_headings":"","what":"Response Curves","title":"MMM-With-Carryover-And-Saturation","text":"Generate response model decomposition Visualize response curves Estimate mROI ROI response curves","code":"response <- response_curves(model_decomps) response #> # A tibble: 12,000 × 8 #>    model       var        var_shape var_nu mid_point_x mid_point_y     x      y #>    <chr>       <chr>          <dbl>  <dbl>       <dbl>       <dbl> <dbl>  <dbl> #>  1 cs_init_fit mi_banners         1      1     304145.     735921.    0      0  #>  2 cs_init_fit mi_banners         1      1     304145.     735921.  304.  1471. #>  3 cs_init_fit mi_banners         1      1     304145.     735921.  609.  2939. #>  4 cs_init_fit mi_banners         1      1     304145.     735921.  913.  4405. #>  5 cs_init_fit mi_banners         1      1     304145.     735921. 1217.  5867. #>  6 cs_init_fit mi_banners         1      1     304145.     735921. 1521.  7326. #>  7 cs_init_fit mi_banners         1      1     304145.     735921. 1826.  8783. #>  8 cs_init_fit mi_banners         1      1     304145.     735921. 2130. 10236. #>  9 cs_init_fit mi_banners         1      1     304145.     735921. 2434. 11687. #> 10 cs_init_fit mi_banners         1      1     304145.     735921. 2739. 13135. #> # ℹ 11,990 more rows plot_response_curves(response) mroi(response) #> # A tibble: 6 × 4 #> # Groups:   var [3] #>   var        model          ROI  mROI #>   <chr>      <chr>        <dbl> <dbl> #> 1 mi_banners cs_init_fit  2.42  1.21  #> 2 mi_banners cs_tuned_fit 1.11  0.724 #> 3 mi_radio   cs_init_fit  1.01  0.507 #> 4 mi_radio   cs_tuned_fit 0.491 0.260 #> 5 mi_tv      cs_init_fit  1.01  0.504 #> 6 mi_tv      cs_tuned_fit 0.449 0.176"},{"path":"https://bdshaff.github.io/tidymmm/articles/Tuning-Carryover-and-Saturation-Hyperparameters.html","id":"tunable-recipe","dir":"Articles","previous_headings":"","what":"Tunable Recipe","title":"Tuning-Carryover-and-Saturation-Hyperparameters","text":"big advantage using tydymmm major motivation following tydymodels framework set tools hyperparameter tuning. Seting tunable model made easy using tune function. parameter want tune instead hardcoding value set tune(name_of_the_parameter). Make sure names distinct. modeler depending contextual knowledge may tune hyper-parameters model. example set string assumption impact sale banner ads carryover future. TV Radio carryover tuned. define model workflow recipe usual manner.","code":"m_recipe <-   recipe(kpi_sales ~ ., data = mmm_imps) |>   add_role(c(mi_tv, mi_radio, mi_banners), new_role = \"mi\") |>   update_role(Date, new_role = \"temp\") %>%   update_role_requirements(\"temp\", bake = FALSE) |>      #here we will tune the decay rate for banner but hard code max_carryover to 1 i.e. no carryover   step_geometric_adstock(mi_banners, decay = tune(\"banners_decay\"), max_carryover = 1) |>      # we will also tune the shape parameter of the hill saturation function   step_hill_saturation(mi_banners, shape = tune(\"banners_shape\"), max_ref = TRUE) |>      # for tv we will also tune the max carryover   step_geometric_adstock(mi_tv, decay = tune(\"tv_decay\"), max_carryover = tune(\"tv_max_carryover\")) |>   step_hill_saturation(mi_tv, shape = tune(\"tv_shape\"), max_ref = TRUE) |>   step_geometric_adstock(mi_radio, decay = tune(\"radio_decay\"), max_carryover = tune(\"radio_max_carryover\")) |>   step_hill_saturation(mi_radio, shape = tune(\"radio_shape\"), max_ref = TRUE) m_mod <-   linear_reg() |>   set_engine(\"lm\")  m_wflow <-   workflow() |>   add_model(m_mod) |>   add_recipe(m_recipe)"},{"path":"https://bdshaff.github.io/tidymmm/articles/Tuning-Carryover-and-Saturation-Hyperparameters.html","id":"define-a-tuning-grid","dir":"Articles","previous_headings":"","what":"Define a Tuning Grid","title":"Tuning-Carryover-and-Saturation-Hyperparameters","text":"begin really tap tydymeodels framework. define grid parameters search optimal combination follow define random grid ranges hyperparameters. ’ll use grid_random function metric functions provided tydymmm, shape, max_carryover, decay. functions can take range parameter set lower upper limits. Setting range like essentially allows bias business domain knowledge come play. range provided search whole domain function preformed. hyperparameters create column name matching recipe. make search little quicker set max grid size 1000.","code":"set.seed(007)  rand_grid <-   grid_random(     decay(range = c(0.01, 0.5)),     tv_shape = shape(range = c(0.01, 0.9)),     tv_max_carryover = max_carryover(range = c(2 , 8)),     banners_decay = decay(range = c(0.01, 0.5)),     banners_shape = shape(range = c(1, 2)),     radio_decay = decay(range = c(0.01, 0.4)),     radio_shape = shape(range = c(1, 2)),     radio_max_carryover = max_carryover(range = c(1 , 3)),     size = 10   ) %>%   rename(tv_decay = decay) rand_grid #> # A tibble: 10 × 8 #>    tv_decay tv_shape tv_max_carryover banners_decay banners_shape radio_decay #>       <dbl>    <dbl>            <int>         <dbl>         <dbl>       <dbl> #>  1   0.495    0.163                 4         0.101          1.76      0.312  #>  2   0.205    0.216                 5         0.101          1.44      0.255  #>  3   0.0667   0.698                 3         0.196          1.90      0.292  #>  4   0.0442   0.0957                8         0.425          1.32      0.161  #>  5   0.129    0.414                 8         0.254          1.08      0.0735 #>  6   0.398    0.0854                7         0.397          1.82      0.0830 #>  7   0.177    0.509                 7         0.421          1.90      0.163  #>  8   0.486    0.0177                4         0.234          1.97      0.117  #>  9   0.0913   0.887                 6         0.402          1.57      0.0848 #> 10   0.235    0.292                 5         0.197          1.72      0.207  #> # ℹ 2 more variables: radio_shape <dbl>, radio_max_carryover <int>"},{"path":"https://bdshaff.github.io/tidymmm/articles/Tuning-Carryover-and-Saturation-Hyperparameters.html","id":"tune","dir":"Articles","previous_headings":"","what":"Tune","title":"Tuning-Carryover-and-Saturation-Hyperparameters","text":"Next ’ll set cross-validation scheme 5 folds two repetitions. Now ready tune! Pass workflow tune_grid resamples, grid, set metrics optimize . search optimal MAPE. see results ’ll unwrap metrics column models take average folds repetitions tuning cv scheme. Plot average MAPE grid two variables","code":"folds <- vfold_cv(mmm, v = 5, repeats = 2) tuned <-    m_wflow %>%    tune_grid(     resamples = folds,      grid = rand_grid,      metrics = metric_set(mape)     ) tn_summary <-    tuned %>%   unnest(.metrics) %>%   group_by(     tv_max_carryover,     tv_decay,     tv_shape,     banners_decay,     banners_shape,     radio_max_carryover,     radio_decay,     radio_shape     ) %>%   summarise(mape = mean(.estimate)) %>%   arrange(mape)  tn_summary #> # A tibble: 10 × 9 #> # Groups:   tv_max_carryover, tv_decay, tv_shape, banners_decay, banners_shape, #> #   radio_max_carryover, radio_decay [10] #>    tv_max_carryover tv_decay tv_shape banners_decay banners_shape #>               <int>    <dbl>    <dbl>         <dbl>         <dbl> #>  1                6   0.0913   0.887          0.402          1.57 #>  2                3   0.0667   0.698          0.196          1.90 #>  3                7   0.177    0.509          0.421          1.90 #>  4                8   0.129    0.414          0.254          1.08 #>  5                5   0.235    0.292          0.197          1.72 #>  6                5   0.205    0.216          0.101          1.44 #>  7                8   0.0442   0.0957         0.425          1.32 #>  8                4   0.495    0.163          0.101          1.76 #>  9                4   0.486    0.0177         0.234          1.97 #> 10                7   0.398    0.0854         0.397          1.82 #> # ℹ 4 more variables: radio_max_carryover <int>, radio_decay <dbl>, #> #   radio_shape <dbl>, mape <dbl> tn_summary %>%   ggplot(aes(tv_decay, tv_shape)) +   geom_point(aes(color = mape, size = mape)) +   theme_minimal()"},{"path":"https://bdshaff.github.io/tidymmm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ben Denis Shaffer. Maintainer.","code":""},{"path":"https://bdshaff.github.io/tidymmm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shaffer BD (2024). tidymmm: Tools Tidy Marketing Mix Modeling. R package version 0.1.0, https://bdshaff.github.io/tidymmm/.","code":"@Manual{,   title = {tidymmm: Tools For Tidy Marketing Mix Modeling},   author = {Ben Denis Shaffer},   year = {2024},   note = {R package version 0.1.0},   url = {https://bdshaff.github.io/tidymmm/}, }"},{"path":"https://bdshaff.github.io/tidymmm/index.html","id":"tidymmm","dir":"","previous_headings":"","what":"Tools For Tidy Marketing Mix Modeling","title":"Tools For Tidy Marketing Mix Modeling","text":"Tidy tools extensions MMM (Media/Marketing Mix Modeling)","code":""},{"path":"https://bdshaff.github.io/tidymmm/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Tools For Tidy Marketing Mix Modeling","text":"package two main objectives Adstock & Carryover Transformations Saturation Model Evaluation Model Tuning Media/Marketing Optimization Visualizations","code":""},{"path":"https://bdshaff.github.io/tidymmm/index.html","id":"why-tidymodels-and-tidymmm","dir":"","previous_headings":"","what":"Why Tidymodels and Tidymmm","title":"Tools For Tidy Marketing Mix Modeling","text":"Tidymmm takes inspiration great projects developed recent past (see related work ). Modeling methodology design projects (research behind ) used inspiration, however objective re-implementing thier exact functionality. biggest difference tidymmm aims provide modelers felexible tools (la tidymodels philosophy) lock users specific method. disadvantage tidymmm less automated box, hand flexibility comes tidymodels. Tidymodels infrastructure form packages like parsnip (modeling), recipes (data prepossessing), tune (hyper-parameter optimization), workflows (combining everything together). aim tidymmm expend tap tools + provide MMM specific tools implemented tidy-way.","code":""},{"path":"https://bdshaff.github.io/tidymmm/index.html","id":"related-work","dir":"","previous_headings":"","what":"Related Work","title":"Tools For Tidy Marketing Mix Modeling","text":"LightweightMMM Google Robyn Meta PyMC-Marketing PyMC Labs","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/adstock_w.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Adstock Weights — adstock_w","title":"Apply Adstock Weights — adstock_w","text":"function convolve one dimensional vector raw impressions time apply adstock weights.","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/adstock_w.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Adstock Weights — adstock_w","text":"","code":"adstock_w(x, w, l)"},{"path":"https://bdshaff.github.io/tidymmm/reference/adstock_w.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Adstock Weights — adstock_w","text":"x vector w weights l maximum adstock length","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/adstock_w.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Adstock Weights — adstock_w","text":"numeric vector length(x) adstock transformed media impressions.","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/adstock_w.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Adstock Weights — adstock_w","text":"","code":"data(mmm_imps) x <- mmm_imps$mi_banners w <- geometric_adstock_weights() l <- length(w) a <- adstock_w(x, w, l)  x[1:12] #>  [1]    0.000 3731.596 2217.981    0.000 4274.270 2801.566 3329.304 2652.199 #>  [9] 3066.319 2415.696    0.000    0.000 a[1:12] #>  [1] 1432.5600 2865.1200 1997.7330 1777.7585 3556.3257 2838.0783 2874.8193 #>  [8] 2420.2907 2188.6512 1311.0397  206.7044  414.1895"},{"path":"https://bdshaff.github.io/tidymmm/reference/channel_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Channel Metrics — channel_metrics","title":"Channel Metrics — channel_metrics","text":"Channel Metrics","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/channel_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Channel Metrics — channel_metrics","text":"","code":"channel_metrics(model_decomp)"},{"path":"https://bdshaff.github.io/tidymmm/reference/channel_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Channel Metrics — channel_metrics","text":"model_decomp model decomposition table","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/contrib_decomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Contribution Decomposition — contrib_decomp","title":"Contribution Decomposition — contrib_decomp","text":"Contribution Decomposition","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/contrib_decomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contribution Decomposition — contrib_decomp","text":"","code":"contrib_decomp(x, new_data)"},{"path":"https://bdshaff.github.io/tidymmm/reference/contrib_decomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contribution Decomposition — contrib_decomp","text":"new_data data","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/decompose.html","id":null,"dir":"Reference","previous_headings":"","what":"Decompose Model Contributions — decompose","title":"Decompose Model Contributions — decompose","text":"Decompose Model Contributions","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/decompose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decompose Model Contributions — decompose","text":"","code":"decompose(x, new_data, spend_data)"},{"path":"https://bdshaff.github.io/tidymmm/reference/decompose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decompose Model Contributions — decompose","text":"x trained mmm model workflow new_data model impression data spend_data spend data","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/delayed_adstock_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Delayed Adstock Transformations — delayed_adstock_weights","title":"Delayed Adstock Transformations — delayed_adstock_weights","text":"Delayed Adstock Transformations","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/delayed_adstock_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delayed Adstock Transformations — delayed_adstock_weights","text":"","code":"delayed_adstock_weights(   decay = 0.5,   delay = 2,   max_carryover = 12,   normalize = TRUE )"},{"path":"https://bdshaff.github.io/tidymmm/reference/delayed_adstock_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delayed Adstock Transformations — delayed_adstock_weights","text":"decay decay rate delay delay shift parameter max_carryover Max Carryover normalize weights normalized","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/extract_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract step transformation parameters — extract_params","title":"Extract step transformation parameters — extract_params","text":"Extract step transformation parameters","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/extract_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract step transformation parameters — extract_params","text":"","code":"extract_params(model_decomp, type = \"step_hill_saturation\")"},{"path":"https://bdshaff.github.io/tidymmm/reference/extract_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract step transformation parameters — extract_params","text":"model_decomp model decomposition table","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/geometric_adstock.html","id":null,"dir":"Reference","previous_headings":"","what":"Geometric Adstock — geometric_adstock","title":"Geometric Adstock — geometric_adstock","text":"function apply geometric adstock transfromation vector media impressions","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/geometric_adstock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geometric Adstock — geometric_adstock","text":"","code":"geometric_adstock(x, decay = 0.5, max_carryover = 12, normalize = TRUE)"},{"path":"https://bdshaff.github.io/tidymmm/reference/geometric_adstock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geometric Adstock — geometric_adstock","text":"x input vector decay decay rate max_carryover maximum carryover normalize result scaled?","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/geometric_adstock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geometric Adstock — geometric_adstock","text":"numeric vector length(x) adstock transformed media impressions.","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/geometric_adstock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geometric Adstock — geometric_adstock","text":"","code":"data(mmm_imps) x <- mmm_imps$mi_banners a <- geometric_adstock(x) b <- geometric_adstock(x, decay = 0.7, max_carryover = 2)  x[1:12] #>  [1]    0.000 3731.596 2217.981    0.000 4274.270 2801.566 3329.304 2652.199 #>  [9] 3066.319 2415.696    0.000    0.000 a[1:12] #>  [1]    0.0000 1866.2536 2042.3879 1021.1939 2648.2540 2725.2522 3027.6844 #>  [8] 2840.2657 2953.6667 2684.9764 1342.4882  671.2441 b[1:12] #>  [1]    0.0000 2195.0564 2841.2339  913.2861 2514.2767 3407.9738 3112.0000 #>  [8] 2931.0070 2895.7990 2683.5997  994.6985    0.0000  plot(x[1:20], type = \"l\", main = \"Geometric Adstock Transformation of x\") lines(a[1:20], col = 2) lines(b[1:20], col = 3)"},{"path":"https://bdshaff.github.io/tidymmm/reference/geometric_adstock_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Geometric Adstock Weights — geometric_adstock_weights","title":"Geometric Adstock Weights — geometric_adstock_weights","text":"geometric_adstock_weights function called generate vector weights define media impressions decayed present carried future.","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/geometric_adstock_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geometric Adstock Weights — geometric_adstock_weights","text":"","code":"geometric_adstock_weights(decay = 0.5, max_carryover = 12, normalize = TRUE)"},{"path":"https://bdshaff.github.io/tidymmm/reference/geometric_adstock_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geometric Adstock Weights — geometric_adstock_weights","text":"decay decay rate max_carryover maximum carryover normalize result scaled?","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/geometric_adstock_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geometric Adstock Weights — geometric_adstock_weights","text":"numeric vector weights length (max_carryover)","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/geometric_adstock_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geometric Adstock Weights — geometric_adstock_weights","text":"","code":"geometric_adstock_weights() #>  [1] 0.5001221001 0.2500610501 0.1250305250 0.0625152625 0.0312576313 #>  [6] 0.0156288156 0.0078144078 0.0039072039 0.0019536020 0.0009768010 #> [11] 0.0004884005 0.0002442002 geometric_adstock_weights(decay = 0.1) #>  [1] 9e-01 9e-02 9e-03 9e-04 9e-05 9e-06 9e-07 9e-08 9e-09 9e-10 9e-11 9e-12 geometric_adstock_weights(max_carryover = 3) #> [1] 0.5714286 0.2857143 0.1428571 geometric_adstock_weights(decay = 0.4, max_carryover = 4, normalize = FALSE) #> [1] 1.000 0.400 0.160 0.064"},{"path":"https://bdshaff.github.io/tidymmm/reference/hill_saturation.html","id":null,"dir":"Reference","previous_headings":"","what":"Hill Saturation — hill_saturation","title":"Hill Saturation — hill_saturation","text":"function apply Hill Saturation vector media impressions","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/hill_saturation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hill Saturation — hill_saturation","text":"","code":"hill_saturation(   x,   half_saturation = NULL,   shape = NULL,   nu = 1,   max_ref = FALSE )"},{"path":"https://bdshaff.github.io/tidymmm/reference/hill_saturation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hill Saturation — hill_saturation","text":"x input vector half_saturation half_saturation shape shape nu nu max_ref result scale back scale x?","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/hill_saturation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hill Saturation — hill_saturation","text":"numeric vector length(x) saturated media impressions.","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/hill_saturation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hill Saturation — hill_saturation","text":"","code":"data(mmm_imps) x <- mmm_imps$mi_banners y <- hill_saturation(x, shape = 1) y_scaled <- hill_saturation(x, shape = 1, max_ref = TRUE)  x[1:12] #>  [1]    0.000 3731.596 2217.981    0.000 4274.270 2801.566 3329.304 2652.199 #>  [9] 3066.319 2415.696    0.000    0.000 y[1:12] #>  [1] 0.0000000 0.6087971 0.4805148 0.0000000 0.6406154 0.5388220 0.5813179 #>  [8] 0.5251816 0.5611672 0.5018525 0.0000000 0.0000000 y_scaled[1:12] #>  [1]    0.000 2753.500 2173.298    0.000 2897.409 2437.013 2629.215 2375.319 #>  [9] 2538.077 2269.805    0.000    0.000  plot(sort(x), sort(y), type = \"p\", main = 'Hill Saturated x (scaled to [0-1])')  plot(sort(x), sort(y_scaled), type=\"p\", main = \"Scaled to Back to scale of x\") points(sort(x), sort(x), col = 2)"},{"path":"https://bdshaff.github.io/tidymmm/reference/model_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Metrics — model_metrics","title":"Model Metrics — model_metrics","text":"Model Metrics","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/model_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Metrics — model_metrics","text":"","code":"model_metrics(model_decomp, new_data)"},{"path":"https://bdshaff.github.io/tidymmm/reference/model_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Metrics — model_metrics","text":"model_decomp model decomposition table new_data model impressions data","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/mroi.html","id":null,"dir":"Reference","previous_headings":"","what":"mROI Estimate — mroi","title":"mROI Estimate — mroi","text":"mROI Estimate","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/mroi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mROI Estimate — mroi","text":"","code":"mroi(response_curves)"},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_base_contribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Base Contribution — plot_base_contribution","title":"Plot Base Contribution — plot_base_contribution","text":"Plot Base Contribution","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_base_contribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Base Contribution — plot_base_contribution","text":"","code":"plot_base_contribution(model_decomp)"},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_base_contribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Base Contribution — plot_base_contribution","text":"model_decomp model decomposition table","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_channel_contribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Channel Contribution — plot_channel_contribution","title":"Plot Channel Contribution — plot_channel_contribution","text":"Plot Channel Contribution","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_channel_contribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Channel Contribution — plot_channel_contribution","text":"","code":"plot_channel_contribution(model_decomp)"},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_channel_contribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Channel Contribution — plot_channel_contribution","text":"model_decomp model decomposition table","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_channel_contribution_month.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Channel Contribution Mopnth — plot_channel_contribution_month","title":"Plot Channel Contribution Mopnth — plot_channel_contribution_month","text":"Plot Channel Contribution Mopnth","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_channel_contribution_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Channel Contribution Mopnth — plot_channel_contribution_month","text":"","code":"plot_channel_contribution_month(model_decomp, begin_date, end_date)"},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_channel_contribution_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Channel Contribution Mopnth — plot_channel_contribution_month","text":"model_decomp model decomposition table begin_date minimum date end_date maximum date","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_model_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Model Fit — plot_model_fit","title":"Plot Model Fit — plot_model_fit","text":"Plot Model Fit","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_model_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Model Fit — plot_model_fit","text":"","code":"plot_model_fit(model_decomp)"},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_model_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Model Fit — plot_model_fit","text":"model_decomp model decomposition table","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_response_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"user step function that tackes the recipe and adds to it — plot_response_curves","title":"user step function that tackes the recipe and adds to it — plot_response_curves","text":"@param response_curves response curves data table","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_response_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"user step function that tackes the recipe and adds to it — plot_response_curves","text":"","code":"plot_response_curves(response_curves)"},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_roi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ROI — plot_roi","title":"Plot ROI — plot_roi","text":"Plot ROI","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_roi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ROI — plot_roi","text":"","code":"plot_roi(model_decomp)"},{"path":"https://bdshaff.github.io/tidymmm/reference/plot_roi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ROI — plot_roi","text":"model_decomp model decomposition table","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/response_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Response Curves — response_curves","title":"Generate Response Curves — response_curves","text":"Generate Response Curves","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/response_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Response Curves — response_curves","text":"","code":"response_curves(model_decomp)"},{"path":"https://bdshaff.github.io/tidymmm/reference/response_curves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Response Curves — response_curves","text":"model_decomp model decomposition table/s","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/roi.html","id":null,"dir":"Reference","previous_headings":"","what":"ROI Calculation — roi","title":"ROI Calculation — roi","text":"ROI Calculation","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/roi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ROI Calculation — roi","text":"","code":"roi(x, new_data, spend_data)"},{"path":"https://bdshaff.github.io/tidymmm/reference/roi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ROI Calculation — roi","text":"x trained mmm model workflow new_data impressions data spend_data spend data","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/step_geometric_adstock.html","id":null,"dir":"Reference","previous_headings":"","what":"Geometric Adstock Transformation — step_geometric_adstock","title":"Geometric Adstock Transformation — step_geometric_adstock","text":"step_geometric_adstock() creates specification recipe step adstock transform data.","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/step_geometric_adstock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geometric Adstock Transformation — step_geometric_adstock","text":"","code":"step_geometric_adstock(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   decay = 0.5,   max_carryover = 12,   columns = NULL,   skip = FALSE,   id = recipes::rand_id(\"geometric_adstock\") )"},{"path":"https://bdshaff.github.io/tidymmm/reference/step_geometric_adstock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geometric Adstock Transformation — step_geometric_adstock","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables step. See selections() details. role model terms created step, analysis role assigned? default, new columns created step original variables used predictors model. trained logical indicate quantities preprocessing estimated. decay Decay Rate parameter geometric adstock transformation max_carryover Maximum Carryover parameter geometric adstock transformation columns character string selected variable names. field placeholder populated prep() used. skip logical. step skipped recipe baked bake()? operations baked prep() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify ","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/step_geometric_adstock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geometric Adstock Transformation — step_geometric_adstock","text":"updated version recipe new step added sequence existing operations.","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/step_geometric_adstock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geometric Adstock Transformation — step_geometric_adstock","text":"","code":"library(tidymodels) #> Error in library(tidymodels): there is no package called ‘tidymodels’ library(tidymmm) data(mmm_imps) mmm_recipe <-   recipe(kpi_sales ~ mi_tv, data = mmm_imps) |>   step_geometric_adstock(mi_tv) #> Error in recipe(kpi_sales ~ mi_tv, data = mmm_imps): could not find function \"recipe\""},{"path":"https://bdshaff.github.io/tidymmm/reference/step_hill_saturation.html","id":null,"dir":"Reference","previous_headings":"","what":"Hill Saturation Step — step_hill_saturation","title":"Hill Saturation Step — step_hill_saturation","text":"step_hill_saturation() creates specification recipe step apply hill saturation transformation data.","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/step_hill_saturation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hill Saturation Step — step_hill_saturation","text":"","code":"step_hill_saturation(   recipe,   ...,   role = \"predictor\",   trained = FALSE,   half_saturation = NULL,   shape = 1,   nu = 1,   max_ref = FALSE,   columns = NULL,   skip = FALSE,   id = recipes::rand_id(\"hill_saturation\") )"},{"path":"https://bdshaff.github.io/tidymmm/reference/step_hill_saturation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hill Saturation Step — step_hill_saturation","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables step. See selections() details. role model terms created step, analysis role assigned? default, new columns created step original variables used predictors model. trained logical indicate quantities preprocessing estimated. half_saturation Half Saturation hill saturation transformation shape shape parameter hill saturation transformation nu nu parameter max_ref logical. data scaled back original scale. columns character string selected variable names. field placeholder populated prep() used. skip logical. step skipped recipe baked bake()? operations baked prep() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify ","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/step_hill_saturation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hill Saturation Step — step_hill_saturation","text":"updated version recipe new step added sequence existing operations.","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/step_hill_saturation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hill Saturation Step — step_hill_saturation","text":"","code":"library(tidymodels) #> Error in library(tidymodels): there is no package called ‘tidymodels’ library(tidymmm) data(mmm_imps) mmm_recipe <-   recipe(kpi_sales ~ mi_tv, data = mmm_imps) |>   step_hill_saturation(mi_tv) #> Error in recipe(kpi_sales ~ mi_tv, data = mmm_imps): could not find function \"recipe\""},{"path":"https://bdshaff.github.io/tidymmm/reference/tidymmm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tidymmm: Tools For Tidy Marketing Mix Modeling — tidymmm-package","title":"tidymmm: Tools For Tidy Marketing Mix Modeling — tidymmm-package","text":"Package MMM tools work tidymodels framework post modeling tools model evaluation optimization.","code":""},{"path":[]},{"path":"https://bdshaff.github.io/tidymmm/reference/validate_mmm_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate media investment and spend datasets — validate_mmm_dataset","title":"Validate media investment and spend datasets — validate_mmm_dataset","text":"Validate media investment spend datasets","code":""},{"path":"https://bdshaff.github.io/tidymmm/reference/validate_mmm_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate media investment and spend datasets — validate_mmm_dataset","text":"","code":"validate_mmm_dataset(imps_df, spend_df)"},{"path":"https://bdshaff.github.io/tidymmm/reference/validate_mmm_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate media investment and spend datasets — validate_mmm_dataset","text":"imps_df media investment data spend_df media spend data","code":""},{"path":"https://bdshaff.github.io/tidymmm/news/index.html","id":"tidymmm-010","dir":"Changelog","previous_headings":"","what":"tidymmm 0.1.0","title":"tidymmm 0.1.0","text":"Initial CRAN submission.","code":""}]
